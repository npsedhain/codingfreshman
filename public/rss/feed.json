{
    "version": "https://jsonfeed.org/version/1",
    "title": "Anup Sedhain",
    "home_page_url": "https://www.codingfreshman.com",
    "feed_url": "https://www.codingfreshman.com/rss/feed.json",
    "description": "Sharing my journey as an independent software developer.",
    "icon": "https://www.codingfreshman.com/favicon.ico",
    "author": {
        "name": "Anup Sedhain"
    },
    "items": [
        {
            "id": "https://www.codingfreshman.com/essays/why-me",
            "content_html": "<p>Disclaimer - this is not the technical side of me.\nIf you want to get to that directly, take a look at my portfolio <a href=\"/portfolio\">here</a>.</p>\n<ol>\n<li>I am foolish.</li>\n</ol>\n<p>I am foolish enough to believe I can do something without knowing a single thing about it. I just begin. I have realized not knowing how complicated things get can actually be used to my advantage. I uncovered this about me when I built a minimal version of React back in 2019. I was just starting to code.</p>\n<ol start=\"2\">\n<li>I am hungry.</li>\n</ol>\n<p>I have this insatiable hunger for knowledge. In my pursuit of more knowledge, I came up with a rule recently for the small choices I make through out the day. I ask myself these two questions for any activity I come across (apart from the necessary routine) -</p>\n<ul>\n<li>Will I learn anything new?</li>\n<li>Will I have fun? (Having fun helps)</li>\n</ul>\n<p>The best choice is when it leads to both. For me, it is - reading, solving problems, and writing.</p>\n<ol start=\"3\">\n<li>I am jealous.</li>\n</ol>\n<p>I am jealous of everyone around me who I think Is better. The competitive person in me wants to be the best person I know. And the hard working person in me pushes me to be just that. While I may not be the smartest person to find the most efficient way, I brute force myself to get where I need to be. And as we know, as slow as it might be, brute force works!</p>",
            "url": "https://www.codingfreshman.com/essays/why-me",
            "title": "Why me?",
            "summary": "Why hiring me is not a mistake.",
            "date_modified": "2024-11-06T00:00:00.000Z",
            "author": {
                "name": "Anup Sedhain"
            }
        },
        {
            "id": "https://www.codingfreshman.com/essays/should-js-devs-panic",
            "content_html": "<p>“Javascript is the assembly language of the web.” - <strong>Scott Hanselman</strong></p>\n<p>If this sentence doesn’t make sense to you. I suggest you read on.</p>\n<p>If this does make sense, wait until you read the end and you will change your mind.</p>\n<p>A decade back this was a famous analogy. And rightfully so.</p>\n<img alt=\"JavaScript\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjavascript.258ff632.jpg&amp;w=3840&amp;q=75 1x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjavascript.258ff632.jpg&amp;w=3840&amp;q=75\" width=\"5000\" height=\"3334\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<a href=\"http://www.freepik.com\">Designed by vectorjuice / Freepik</a>\n<p>Javascript has been the sole ruler of all things web. Any code you write or frameworks/libraries you use like Vue, React, CoffeeScript, and so on. They were all converted to JS which is then Just in Time-compiled into <strong>machine instructions</strong> for virtual machines in the browsers to understand.</p>\n<p>But on the 17th of June 2015, that analogy lost its weight.</p>\n<p>A few weeks ago, my friend told me that he had started tinkering with Rust. I brushed it off at the time because he is always doing something and I couldn’t care less.</p>\n<p>But a week after that, he asked if I wanted to join him in trying to figure out Rust together. Like we used to do back in the day.</p>\n<p>I didn’t want to. I was quite occupied with my work but since it was the second time he brought it up. I asked him, “Why would I want to learn Rust?”</p>\n<p>You know WebAssembly and Rust. They go together.</p>\n<p>This got my attention. Anything with the web on it. I jump in. <em>(I am also a big Spiderman fan, so you know I am not bluffing!)</em></p>\n<p>I am someone who inadvertently missed all the assembly language classes at my university. So when I heard the term web and assembly together. It ruffled some feathers in my brain. I never knew these two words could be brought together. How are they going to work? I wondered.</p>\n<p>I will start with the word that I am least familiar with. <strong>Assembly</strong>. The only thing I know about it is that it’s a low-level language. And what’s that you ask?</p>\n<p>You must be aware that computers only understand 0s and 1s.</p>\n<p>That means the code you write in plain english using different frameworks and libraries bas to be converted to 0s and 1s. That’s where assembly language comes into play. In simple terms, they act as a translator which sits between the code you write and the computer hardware. Over which they have more direct control.</p>\n<p>Assembly language is just a human readable form of machine language.</p>\n<p>So what does it mean when they say WebAssembly?</p>\n<p>Let’s just say, it means that you can run assembly code in the browser.</p>\n<p>Prior to June 17, 2015, almost everything would be compiled into Javascript. But with the introduction of WASM (WebAssembly), you get to write code in C, C++, C#, and Rust that will now be compiled into actual assembly language.</p>\n<p><em>But hey, why would I want assembly language on the web? I am happy with what I have.</em></p>\n<p>With the information you have already, you won’t be surprised if I said assembly language is much faster and efficient than any high level language. Its introduction to the web is a vital step forward for <strong>web-based</strong> computing.</p>\n<p>Today, you already use web browsers for most things. Documentation, communication, content consumption, you name it. It all happens on the web.</p>\n<p>But even today, when it comes to designers and video creators, they use what we call <strong>native apps</strong>. Let’s take applications such as <a href=\"https://www.adobe.com/products/photoshop.html\">Adobe PhotoShop</a> and <a href=\"https://www.adobe.com/products/premiere.html\">Adobe Premiere Pro</a>. They have not yet made it to the web. <em>(We do have <a href=\"https://www.adobe.com/express/\">Adobe Express</a> on the web but it’s not as powerful. Even Adobe Express has been possible due to WASM.)</em></p>\n<p>But this could all change, the way we see browsers and computers might not be all that different in the future.</p>\n<p>And developers are excited with the idea that the need to write native applications is reducing. It is because the browser environment is essentially identical across PCs, tablets, and phones. It is also same across Windows, Mac, Android, Linux, and so on. This removes developers from having to recompile their code for different CPU types.</p>\n<p>Web-based computing is platform-independent.</p>\n<p>And there has already been a lot of great news since the arrival of WASM in 2015.</p>\n<p>Let’s get back to Adobe and its famous PDF reader, <a href=\"https://blog.developer.adobe.com/acrobat-on-the-web-powered-by-webassembly-782385e4947e\">Acrobat</a>. They introduced it on the web back in 2020 which, you guessed it, is powered by WebAssembly.</p>\n<p><a href=\"https://www.figma.com/\">Figma</a>, a market leader in web design, also leverages WebAssembly. And the fact that their web application is as good as the native counterpart is possible only because of WASM.</p>\n<p>Gaming on the web is undergoing ground breaking changes too. A game from Epic or Unity that took 20-30 seconds to load now just takes a couple of seconds. That’s at least a 10x improvement. And it’s a significant jump.</p>\n<p>So what does this mean for Javascript? Is it a programming language that&#x27;s bound to fail?</p>\n<p>Hear it from the father of Javascript, <strong>Brendan Eich</strong>, who also introduced WebAssembly to the world -</p>\n<p><em><strong>“We’re not killing JavaScript. I don’t think it’s even possible to kill JavaScript.”</strong></em></p>\n<p>WebAssembly is not a replacement for Javascript, but in reality, it is designed to complement and run alongside it. At least that is where we are headed as of now.</p>\n<p>Just consider WebAssembly as a nitrous booster to Javascript. Everywhere Javascript struggled, WebAssembly is going to shine.</p>\n<p>I am, however, not oblivious to the fact that WebAssembly does hold the potential to replace Javascript in web applications. Take this project <a href=\"https://github.com/yewstack/yew\">Yew</a> as an example, it is a rust framework for creating multi-threaded front-end web apps with WebAssembly.</p>\n<p>But projects like these are in the nascent stage and they still support JS interoperability. They have to.</p>\n<p>So I don’t want any of the Javascript aficionados to panic. Yet. You will long be off market before WASM replaces Javascript. You have better things to worry about right now. <em>(Heard of Chat-GPT?)</em></p>\n<p>However, if you are looking at something interesting to dive deep into and learn something that would help you in your career. This could really be it.</p>\n<p>Starting today not only means you will be at the forefront of a growing community, but you could be the driving force that helps web-based computing reach its potential.</p>\n<p>The future of web-based computing hasn’t been more bright. I suggest you take your sunglasses out before the ride.</p>\n<p>If you are interested <em>(which I believe you are if you read till the end)</em>, here are some resources that will quickly get you started with WebAssembly.</p>\n<ol>\n<li>\n<p>This is a book that explains how to use <a href=\"https://rustwasm.github.io/book/why-rust-and-webassembly.html\">Rust and WebAssembly</a></p>\n</li>\n<li>\n<p>MDN is a great resource for anything web related. I highly recommend their <a href=\"https://developer.mozilla.org/en-US/docs/WebAssembly\">tutorial</a>. They are also the pioneers of WASM.</p>\n</li>\n<li>\n<p>If you are interested to know further about WebAssembly and about it&#x27;s inception. Read <a href=\"https://medium.com/javascript-scene/what-is-webassembly-the-dawn-of-a-new-era-61256ec5a8f6\">this</a>.</p>\n</li>\n</ol>\n<p>Until next time, happy coding!</p>",
            "url": "https://www.codingfreshman.com/essays/should-js-devs-panic",
            "title": "Should JavaScript developers panic?",
            "summary": "The future of web development looks bright.",
            "date_modified": "2023-03-06T00:00:00.000Z",
            "author": {
                "name": "Anup Sedhain"
            }
        },
        {
            "id": "https://www.codingfreshman.com/essays/code-reviews-better-developer",
            "content_html": "<p>I used to dread code reviews. It felt like carving yourself open to invite judgmental comments. I did not look forward to it.</p>\n<p>It even felt like a waste of time. Updating variable names, changing function orders, simplifying logic, and following stylistic guidelines. I didn’t see a point to it and hated when that happened.</p>\n<p>And if you are anything like I used to be, you hate it too. You doubt your own abilities when you read through PR comments and worse, each PR comment discourages you.</p>\n<p>I remember when I used to feel that way.</p>\n<p>But I went past it. I overcame my fear. Today I look forward to code reviews and honestly, it is one of the better portions of my day.</p>\n<p>In this post, I will share how I changed my perspective toward code reviews and how you can do it too. (And why you should.)</p>\n<img alt=\"Code Reviews\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2FcodeReviews.d5833b6e.jpeg&amp;w=3840&amp;q=75 1x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2FcodeReviews.d5833b6e.jpeg&amp;w=3840&amp;q=75\" width=\"5058\" height=\"3372\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<p>It was a normal day at the office (back when I used to work from an actual office space with 50 others in the same hall). I had just opened a PR and was taking a moment before going through the remaining tickets in the sprint. That’s when I hear one of my senior colleagues burst out into laughter. Everyone’s heads turn towards him. Who doesn&#x27;t want a good laugh?</p>\n<p>I reach his desk and see what was so funny on screen that everyone around him had joined in for a laugh. I saw it - he was reviewing my code. I didn’t know how to react. I smiled but I also went red with embarrassment.</p>\n<p>As he was laughing, he removed a big chunk of code and replaced it with a single line. At that moment, I went from being embarrassed to being amazed. I thought to myself, “Why didn’t I think of that? It’s so simple.”</p>\n<p>This experience changed how I perceived code reviews. Although at the beginning it might have made me a bit skeptical and more fearful of opening a PR. I was wary of being a laughing stock again. In retrospect, that experience did more good than bad.</p>\n<p>I started checking my own code. To catch any sections where I could improve. Soon enough I started seeing those quirks myself. I went the extra mile to come up with a better solution. All those variable name changes and function order changes started to make more sense. They made my code more readable. After all, we are writing codes for humans.</p>\n<p>I also started reviewing other people’s codes. That’s when I realized that nobody writes perfect code all the time. Sometimes even the most senior developers make silly mistakes. And how they handled the situation without feeling a bit of insult was something I could learn from. After all, we are always learning. What helped me was taking myself less seriously and the process a bit more lightly. (You don’t need to wear your heart on your sleeves all the time.)</p>\n<p>Instead of being wary that my code would make people laugh. I started looking forward to such moments because it meant I would learn something interesting and important. I started seeing code reviews as an opportunity to learn.</p>\n<p>But the feeling that you are learning alone doesn’t make you look forward to events. We all need to have some fun, right?</p>\n<p>And to my surprise, I was having fun. Addressing comments became the time for me to unwind from stress. Break the monotony of writing codes all day. It was also a time when colleagues in my team came together to solve a problem. We have come up with a lot of good ideas during this time. Code reviews have become a fruitful and fun team engagement activity for us.</p>\n<p>Today I have developed a lens through which I see my own work from someone else’s perspective. I go through my code multiple times before getting opinions from others. I have become a conscious and careful developer.</p>\n<p>I have formed a habit of giving each PR an extra hour of walk-through. I do not rush to get my work out but carefully critique myself and see how I can come up with the best possible solution. I also catch a lot of prospective comments and make changes before the fact.</p>\n<p>I am aware that it’s not the most time-efficient approach but it’s a healthy one. We are not competing with anyone to produce as many lines of code in the least amount of time. Your conscious effort might feel like you are taking a lot of time now. But you end up saving a lot by reducing time to refactor later. You also eliminate code smell. And you are writing maintainable code. That is a big win.</p>\n<p>Comprehensive code reviews also mean that your code handles all edge cases and is prone to fewer bugs. You might be a stellar coder but sometimes something just doesn’t cross your mind. You will miss that hidden requirement or make a silly mistake. Hence a fresh set of eyes is not just a good to have but a must-have. Always consider code reviews as a positive and constructive situation.</p>\n<p>I have also realized that however hard I try to catch my own mistakes, I do get a lot of comments. But let me tell you what a lot of comments don’t mean.</p>\n<p>It doesn’t mean you are doing a bad job - far from it.</p>\n<p>One thing you should start doing is to stop getting offended when someone suggests a change. The process of learning during code reviews goes both ways. Remember that the person who is reviewing is also learning from what you have done.</p>\n<p>Sometimes a lot of comments mean a difference of opinion. Rather than taking it as a command, take it as an opportunity to make your thought process clearer. Don’t ever get defensive, respond with a question and discuss further to get on the same page. Remember you both want the best for the team and for the software you are writing.</p>\n<p>Never shy away from asking a lot of questions. What you are doing with code reviews is you are harnessing somebody else’s brain power. And doing so is not a sign of weakness. It is actually a sign of wisdom.</p>\n<p>Until next time, happy coding!</p>",
            "url": "https://www.codingfreshman.com/essays/code-reviews-better-developer",
            "title": "How Code Reviews can make you a Better Developer?",
            "summary": "You have been underestimating the power of effective code reviews.",
            "date_modified": "2023-02-26T00:00:00.000Z",
            "author": {
                "name": "Anup Sedhain"
            }
        },
        {
            "id": "https://www.codingfreshman.com/essays/how-to-land-client",
            "content_html": "<p>I had already given up freelancing once thinking it was not my cup of tea. And I was on the verge of giving up trying the second time.</p>\n<p>That’s when I landed my very first client.</p>\n<p>It conveniently happened to me at the right moment. And if you want to make it happen for yourself, read on.</p>\n<p><em>Today</em>, I will distill the three most important focus points that will help you land your first client.</p>\n<p><strong>1. Credibility</strong></p>\n<p><strong>2. Communication</strong></p>\n<p><strong>3. Delivery</strong></p>\n<p><em>CCD</em>, if you will.</p>\n<p>I am sure you watch movies. Have you noticed trailers where they mention that a movie is <em>from the makers of two other movies that were big hits</em>?</p>\n<p>Take this for example.</p>\n<img alt=\"Credibility\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcredibility.755e4790.jpeg&amp;w=3840&amp;q=75 1x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcredibility.755e4790.jpeg&amp;w=3840&amp;q=75\" width=\"2520\" height=\"1330\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<p>I wouldn’t have cared to even watch the trailer had it not mentioned, “From the Producers of “Love Actually”.” Love Actually is one of my favorites. And I trust the producers to make more movies like that.</p>\n<p>That’s credibility in action.</p>\n<p>This is also a proof that the professional world values people with experience. But that leaves us novices with a challenge. The challenge of building credibility and establishing trust without a strong portfolio.</p>\n<p>I am sure you have heard the term, <a href=\"https://buildinpublic.com/\">Building in Public</a>. Don’t worry if you have not, <em>that’s why you are reading this</em>.</p>\n<p>It is a concept born on Twitter where founders share what they are building and how they are building it. It brings interest even before they have something tangible for their audience. <em>Mastermind</em>, right?</p>\n<p>My dear coding freshman, you can apply this to make yourself credible.</p>\n<p>No, you don’t need to build a company in public. The Udemy course that you are following or the Youtube tutorial you are watching - post whatever comes out of it in public. Always push to GitHub and make your repos public. Always make your work accessible.</p>\n<p>Clients need to believe that you are capable of doing their work. And before they believe in you, you need to be comfortable sharing your work and have confidence in your own abilities. That’s the first step. They need to see <strong>something to make them take a chance at you</strong>.</p>\n<p>Create your portfolio website and publish your CV in there. It doesn’t matter if you have done nothing. It shows that you can at least build and publish a website. Sometimes that’s all they need to know.</p>\n<p>Now let’s believe that your GitHub profile and the website you created helped you get an interview. Now you have a make-or-break situation.</p>\n<p><strong>You need to communicate well.</strong></p>\n<p>You might think this meeting is about you. It’s a common mistake beginner freelancers make. It’s not. It’s about them.</p>\n<p>Yes, you need to talk a little about yourself and tell them why you are a good fit for their project. Be clear. Be concise. And that is enough about you.</p>\n<p>Make it more about them. Ask them about their project. How they came to think about it. Their vision. Their approach. Take lead. Always ask questions. It shows that you are interested in the project and not there only for the money. Clients love a little empathy.</p>\n<p>Don’t just ask for the sake of asking though. Listen. Listen actively. Politely add your thoughts and suggestions when you have something to offer. But first, be a good listener.</p>\n<p>If you are mistakenly thinking that having the right skillset trumps communication skills. Read this excerpt from <a href=\"https://matthewdicks.com/storyworthy/\">Storyworthy</a>, a book written by a best-seller writer.</p>\n<p>(You can just focus on the highlighted part.)</p>\n<img alt=\"Communication\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcommunication.57d0c3f8.jpeg&amp;w=3840&amp;q=75 1x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcommunication.57d0c3f8.jpeg&amp;w=3840&amp;q=75\" width=\"2904\" height=\"1274\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<p>It’s now time for the final nail in the coffin and land your first client.</p>\n<p>You already have something credible to show your client. You communicated well in your first meeting. Now you are given a week to work and find out if you can deliver.</p>\n<p>The hard skill you own will finally come into play. (Notice how this is the final step and not the first?)</p>\n<p><strong>Now make sure you deliver enough value.</strong> But how do we do that?</p>\n<p>Let me introduce you to the Value Equation by Alex Hormozi, the founder of <a href=\"https://www.acquisition.com/\">Acquisition</a>.</p>\n<p><strong>value = (dream outcome * perceived likelihood of achievement)/(time delay * effort &amp; sacrifice)</strong></p>\n<p>If you take a look at this, there are two ways to can increase the value delivered to your client. Simple maths - you can either increase the numerator or decrease the denominator.</p>\n<p>You have already shown promise (dream outcome) and credibility (likelihood of achievement) with your Github profile and the website you created.</p>\n<p>It’s time to decrease time delay and effort.</p>\n<p>However, never over promise in the name of decreasing time delay. If you are not 100% sure about the complexity of the project. Always overestimate the time required.</p>\n<p>Wait, but that increases the time delay. Doesn’t it?</p>\n<p>That’s where effective communication plays an important role. When you share updates with the client on a regular basis, you take away the perception that you are slow. You are always making progress and it will not feel like you are taking a lot of time. Each update you share is a valuable asset to your client.</p>\n<p>You should also share all the obstacles you face in the process. That way they know you are putting enough effort to realize the dream outcome.</p>\n<p>And that’s it, deliver your project.</p>\n<p>Congratulations! You successfully landed your first client and delivered your first milestone. If you checked all three boxes, I am sure the client will hire you and turn your way again when they have something relevant in the future. This should set you up for your journey as a freelancer.</p>\n<p>All the best.</p>\n<p>Final thing before you go. If you want to master each step I mentioned. Here are some pointers to get you started today.</p>\n<ol>\n<li>Use <a href=\"https://gohugo.io/\">Hugo</a> to set up your website. It&#x27;s one of the fastest and easiest frameworks out there.</li>\n<li>Read the book <a href=\"https://www.goodreads.com/book/show/4865.How_to_Win_Friends_and_Influence_People\">How to Win Friends &amp; Influence People</a>. It&#x27;s a first step towards being a people person.</li>\n<li>Watch <a href=\"https://www.acquisition.com/offers-value-equation\">this</a> to better understand the value equation from Hormozi himself.</li>\n</ol>\n<p>Until next time, happy coding!</p>",
            "url": "https://www.codingfreshman.com/essays/how-to-land-client",
            "title": "How do I land my first freelance client?",
            "summary": "Three most important focus points to land your first freelance client.",
            "date_modified": "2023-02-19T00:00:00.000Z",
            "author": {
                "name": "Anup Sedhain"
            }
        },
        {
            "id": "https://www.codingfreshman.com/essays/how-to-get-started",
            "content_html": "<p><em>Four years ago</em>, I had a failed startup. The only company I applied for an internship rejected me. My final semester was coming to an end. And I hadn’t felt more lost.</p>\n<img alt=\"confused software developer\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fconfused.cdc1d31d.jpeg&amp;w=3840&amp;q=75 1x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fconfused.cdc1d31d.jpeg&amp;w=3840&amp;q=75\" width=\"6000\" height=\"4000\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<p><em>Today</em>, I am a full-time software developer. I have helped build dozens of products for clients across the globe.</p>\n<p>The journey was not an easy one. But it is something anyone can do. Only most people have difficulty starting out.</p>\n<p>I know this because a lot of college seniors have asked me, “<strong>How do I get started?</strong>” You can either spend four years figuring out the journey yourself or spend 5 minutes reading through this article.</p>\n<p>So back to me in 2019. I decided I would give it a second try. With enough preparation this time around, I got accepted. I was in for a rigorous 3 month-long internship program.</p>\n<p>23 soon-to-graduate students in the same room, all fighting to land a job. I felt an immense sense of competition. No one actually addressed the tension in that room but each one of us wanted to be better than the next person.</p>\n<p>Why am I telling you all this? I want you to create the same environment as we had in there.</p>\n<p>No, I am not asking you to go internship hunting. While I am sure that will work, it might not be as feasible. Instead, find someone who is as passionate about learning as you are. And hold each other accountable for whatever it is you do. There you go, that’s step one.</p>\n<p>I recommend you find a partner because of what I realized in that internship. The power of healthy competition.</p>\n<p>In that room, we were all pushing each another to do better. And, if someone looked ahead of you, you pushed yourself more. That’s why finding someone to share your journey is so crucial. Healthy competition keeps you going.</p>\n<p>Now you may be wondering, what do I actually do once I have a partner? Good question. That’s step two.</p>\n<p>It’s simple. Work on projects you will love. Simple, <em>not</em> easy.</p>\n<p>One of my friends in that internship decided to build a game. And not any game. It was Doodle jump. I am sure you loved it as a child.</p>\n<p>He was nervous when he chose the game though. There were a lot of unknowns. The sensors, the tunnels, the haptics, the sound, the villains - too complicated for everyone in that room. But it was not the same for him in a few days’ time (btw it’s still complicated for me today).</p>\n<p>As days passed by, his project outpaced the rest of ours. Not because he was the best coder in the room. But because he loved the game. He googled his way through any hurdles that came between him and the final version of the game he was so familiar with.</p>\n<p>In two weeks, he iterated the game many times. Finally, his version ended up becoming a complete replica of Doodle Jump. I could see the pride on his face and it was well deserved.</p>\n<p>Did you notice why he chose that game? It was simply because he loved it. He didn&#x27;t choose something that was easy or challenging or something that made sense.</p>\n<p>I ask you to do the same. Don’t try to make sense of your very first project. Because nothing makes sense at first. Take that one thing you love and begin. You will either succeed or fail but either way, you will learn, and most importantly you will get started.</p>\n<p>And you know what? We loved his project. Fellow interns, and mentors. Everyone surrounded him. Everyone wanted to play the game and say something. This brings me to my final point.</p>\n<p>Publish your work. It’s not an option. It is non-negotiable. You could build the future of humankind but if it stays in your computer, it does not matter.</p>\n<p>What matters is publishing any tiny, embarrassing, unoriginal thing you create. The mistake most people make is they completely ignore this step. They feel like they did the job once they have something on their computer.</p>\n<p>But I argue that this is the most important and difficult step of the three. You will feel exposed and vulnerable, but it will pay off.</p>\n<p>Remember I told you how my friend’s project went through many iterations? It was only possible because of all the feedback he received.</p>\n<p>He got a lot of ideas from his audience and that made his work a lot more desirable, which attracted even more people. This created a positive feedback loop and as a result, his project was better. He learned a lot. And if you consider landing a job a success, he succeeded.</p>\n<p>Perform these three steps, and I am confident that you will find yourself getting a hang of things. You will stop feeling lost as I did.</p>\n<p>Even better, repeat the process a couple of times. I will guarantee you will find yourself falling in love with software development.</p>\n<p>Until next time, happy coding!</p>",
            "url": "https://www.codingfreshman.com/essays/how-to-get-started",
            "title": "How do I get started?",
            "summary": "Three steps to kick start your software development career.",
            "date_modified": "2023-02-12T00:00:00.000Z",
            "author": {
                "name": "Anup Sedhain"
            }
        },
        {
            "id": "https://www.codingfreshman.com/essays/what-i-want-in-life",
            "content_html": "<p>My outlook on life changed three years ago. My life has been completely upended since then.</p>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhat-i-want.566f082a.jpeg&amp;w=3840&amp;q=75 1x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fwhat-i-want.566f082a.jpeg&amp;w=3840&amp;q=75\" width=\"2172\" height=\"3862\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<p>Before I start, let me tell you about the conversation I had with my then-girlfriend five years ago.</p>\n<p>I told her, “I don’t have big dreams. A good-paying job, being able to do what I love and spending time with my family on a daily basis. That’s all I want as an adult.” And I know that I meant every word of what I said. My then-girlfriend almost flinched when she heard it.</p>\n<p>She told me about how small I dreamt and that she and I couldn’t build a future together if that is what I really wanted.</p>\n<p>I was sad, obviously.</p>\n<p>Fast forward a couple of years and I had a job. A stable one, just as I had thought. Even paid above market price. It was not even that demanding, so I was spending ample time with people I loved. I even thought I loved what I did.</p>\n<p>I really loved creating things. Bringing beautiful Figma designs to life and curating APIs that added soul to the otherwise dumb UI skeletons.</p>\n<p>I was content with the bare minimum that I had achieved. Until one fine day at Himalayan Java, when my friend asked me to team up for projects that paid nothing but we would own it. I liked the ring to it. Even though it was unlike what I had imagined myself doing, I was excited and jumped right in.</p>\n<p>My friend was more of a risk-taker than I ever could be. Didn’t have a stable paying job like I did but still wanted to build things for himself. I liked that about him and in ways made me want to be more like him.</p>\n<p>That brought me to my era of 16-hour work days. I used to go to the office at 9 in the morning, get back at 7, and worked till 2 at night or sometimes even later.</p>\n<p>The funny thing looking back to that era was that I absolutely loved it. I was excited to go to work knowing that when I get back home, I would be in a different light, different setting, working at a completely different thing that nourished my soul (cliche, I know but I don’t have other words to explain that feeling).</p>\n<p>In a strange way, this made me feel like I lived two separate lives. I felt like Peter Parker as a cameraman at the office and as a Spiderman during the night. And I was successful at being both.</p>\n<p>This unlocked my potential. I couldn’t have imagined working 10 hours a day and suddenly I found myself working through the day and night and doing it all over again tomorrow. I started loving who I was and what I was doing during the night time more than my day counterpart. I mean who would still love clicking pictures if they get to be a Spiderman, right?</p>\n<p>I still remember it was around 1 am in the morning when I was working on logic to replace a legal template with a form data provided and had to curate a legal contract. I had been working on it for a couple days and I had finally cracked it. It was probably my most satisfying day until then.</p>\n<p>A couple of weeks later, my friend and I were having a somewhat serious conversation regarding our future in Nepal. He had asked, “What is it you really want to do in your life? I told him, “I have big dreams. I want to build my own company that specializes in a niche and will be absolutely loved by at least a thousand people. That’s what I want to do.”</p>",
            "url": "https://www.codingfreshman.com/essays/what-i-want-in-life",
            "title": "What I want in life",
            "summary": "Working changed my outlook on life",
            "date_modified": "2023-01-29T00:00:00.000Z",
            "author": {
                "name": "Anup Sedhain"
            }
        }
    ]
}